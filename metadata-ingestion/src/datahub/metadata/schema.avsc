[
  "null",
  {
    "type": "record",
    "name": "MetadataChangeEvent",
    "namespace": "com.linkedin.pegasus2avro.mxe",
    "fields": [
      {
        "type": [
          "null",
          {
            "type": "record",
            "name": "KafkaAuditHeader",
            "namespace": "com.linkedin.events",
            "fields": [
              {
                "compliance": [
                  {
                    "policy": "EVENT_TIME"
                  }
                ],
                "type": "long",
                "name": "time",
                "doc": "The time at which the event was emitted into kafka."
              },
              {
                "compliance": "NONE",
                "type": "string",
                "name": "server",
                "doc": "The fully qualified name of the host from which the event is being emitted."
              },
              {
                "compliance": "NONE",
                "type": [
                  "null",
                  "string"
                ],
                "name": "instance",
                "default": null,
                "doc": "The instance on the server from which the event is being emitted. e.g. i001"
              },
              {
                "compliance": "NONE",
                "type": "string",
                "name": "appName",
                "doc": "The name of the application from which the event is being emitted. see go/appname"
              },
              {
                "compliance": "NONE",
                "type": {
                  "type": "fixed",
                  "name": "UUID",
                  "namespace": "com.linkedin.events",
                  "size": 16
                },
                "name": "messageId",
                "doc": "A unique identifier for the message"
              },
              {
                "compliance": "NONE",
                "type": [
                  "null",
                  "int"
                ],
                "name": "auditVersion",
                "default": null,
                "doc": "The version that is being used for auditing. In version 0, the audit trail buckets events into 10 minute audit windows based on the EventHeader timestamp. In version 1, the audit trail buckets events as follows: if the schema has an outer KafkaAuditHeader, use the outer audit header timestamp for bucketing; else if the EventHeader has an inner KafkaAuditHeader use that inner audit header's timestamp for bucketing"
              },
              {
                "compliance": "NONE",
                "type": [
                  "null",
                  "string"
                ],
                "name": "fabricUrn",
                "default": null,
                "doc": "The fabricUrn of the host from which the event is being emitted. Fabric Urn in the format of urn:li:fabric:{fabric_name}. See go/fabric."
              },
              {
                "compliance": "NONE",
                "type": [
                  "null",
                  "string"
                ],
                "name": "clusterConnectionString",
                "default": null,
                "doc": "This is a String that the client uses to establish some kind of connection with the Kafka cluster. The exact format of it depends on specific versions of clients and brokers. This information could potentially identify the fabric and cluster with which the client is producing to or consuming from."
              }
            ],
            "doc": "This header records information about the context of an event as it is emitted into kafka and is intended to be used by the kafka audit application.  For more information see go/kafkaauditheader"
          }
        ],
        "name": "auditHeader",
        "default": null,
        "doc": "Kafka audit header. See go/kafkaauditheader for more info."
      },
      {
        "type": [
          {
            "type": "record",
            "Entity": {
              "keyAspect": "chartKey",
              "name": "chart"
            },
            "name": "ChartSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.ChartUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "chartKey"
                      },
                      "name": "ChartKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "boostScore": 4.0,
                            "fieldName": "tool",
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "dashboardTool",
                          "doc": "The name of the dashboard tool such as looker, redash etc."
                        },
                        {
                          "type": "string",
                          "name": "chartId",
                          "doc": "Unique id for the chart. This id should be globally unique for a dashboarding tool even when there are multiple deployments of it. As an example, chart URL could be used here for Looker such as 'looker.linkedin.com/looks/1234'"
                        }
                      ],
                      "doc": "Key for a Chart"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "chartInfo"
                      },
                      "name": "ChartInfo",
                      "namespace": "com.linkedin.pegasus2avro.chart",
                      "fields": [
                        {
                          "type": {
                            "type": "map",
                            "values": "string"
                          },
                          "name": "customProperties",
                          "default": {},
                          "doc": "Custom property bag."
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "externalUrl",
                          "default": null,
                          "doc": "URL where the reference exist"
                        },
                        {
                          "Searchable": {
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "title",
                          "doc": "Title of the chart"
                        },
                        {
                          "Searchable": {},
                          "type": "string",
                          "name": "description",
                          "doc": "Detailed description about the chart"
                        },
                        {
                          "type": {
                            "type": "record",
                            "name": "ChangeAuditStamps",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "fields": [
                              {
                                "type": {
                                  "type": "record",
                                  "name": "AuditStamp",
                                  "namespace": "com.linkedin.pegasus2avro.common",
                                  "fields": [
                                    {
                                      "type": "long",
                                      "name": "time",
                                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
                                    },
                                    {
                                      "java": {
                                        "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                                      },
                                      "type": "string",
                                      "name": "actor",
                                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."
                                    },
                                    {
                                      "java": {
                                        "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                                      },
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "name": "impersonator",
                                      "default": null,
                                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."
                                    }
                                  ],
                                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."
                                },
                                "name": "created",
                                "default": {
                                  "actor": "urn:li:corpuser:unknown",
                                  "impersonator": null,
                                  "time": 0
                                },
                                "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."
                              },
                              {
                                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                                "name": "lastModified",
                                "default": {
                                  "actor": "urn:li:corpuser:unknown",
                                  "impersonator": null,
                                  "time": 0
                                },
                                "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."
                              },
                              {
                                "type": [
                                  "null",
                                  "com.linkedin.pegasus2avro.common.AuditStamp"
                                ],
                                "name": "deleted",
                                "default": null,
                                "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
                              }
                            ],
                            "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into various lifecycle stages, and who acted to move it into those lifecycle stages. The recommended best practice is to include this record in your record schema, and annotate its fields as @readOnly in your resource. See https://github.com/linkedin/rest.li/wiki/Validation-in-Rest.li#restli-validation-annotations"
                          },
                          "name": "lastModified",
                          "doc": "Captures information about who created/last modified/deleted this chart and when"
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "chartUrl",
                          "default": null,
                          "doc": "URL for the chart. This could be used as an external link on DataHub to allow users access/view the chart"
                        },
                        {
                          "Relationship": {
                            "/*/string": {
                              "entityTypes": [
                                "dataset"
                              ],
                              "name": "Consumes"
                            }
                          },
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": [
                                "string"
                              ]
                            }
                          ],
                          "name": "inputs",
                          "default": null,
                          "doc": "Data sources for the chart"
                        },
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "KEYWORD"
                          },
                          "type": [
                            "null",
                            {
                              "type": "enum",
                              "symbolDocs": {
                                "BAR": "Chart showing a Bar chart",
                                "PIE": "Chart showing a Pie chart",
                                "SCATTER": "Chart showing a Scatter plot",
                                "TABLE": "Chart showing a table",
                                "TEXT": "Chart showing Markdown formatted text"
                              },
                              "name": "ChartType",
                              "namespace": "com.linkedin.pegasus2avro.chart",
                              "symbols": [
                                "BAR",
                                "PIE",
                                "SCATTER",
                                "TABLE",
                                "TEXT",
                                "LINE",
                                "AREA",
                                "HISTOGRAM",
                                "BOX_PLOT"
                              ],
                              "doc": "The various types of charts"
                            }
                          ],
                          "name": "type",
                          "default": null,
                          "doc": "Type of the chart"
                        },
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "KEYWORD"
                          },
                          "type": [
                            "null",
                            {
                              "type": "enum",
                              "symbolDocs": {
                                "PRIVATE": "Private availability to certain set of users",
                                "PUBLIC": "Publicly available access level"
                              },
                              "name": "AccessLevel",
                              "namespace": "com.linkedin.pegasus2avro.common",
                              "symbols": [
                                "PUBLIC",
                                "PRIVATE"
                              ],
                              "doc": "The various access levels"
                            }
                          ],
                          "name": "access",
                          "default": null,
                          "doc": "Access level for the chart"
                        },
                        {
                          "type": [
                            "null",
                            "long"
                          ],
                          "name": "lastRefreshed",
                          "default": null,
                          "doc": "The time when this chart last refreshed"
                        }
                      ],
                      "doc": "Information about a chart"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "chartQuery"
                      },
                      "name": "ChartQuery",
                      "namespace": "com.linkedin.pegasus2avro.chart",
                      "fields": [
                        {
                          "type": "string",
                          "name": "rawQuery",
                          "doc": "Raw query to build a chart from input datasets"
                        },
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "KEYWORD"
                          },
                          "type": {
                            "type": "enum",
                            "symbolDocs": {
                              "LOOKML": "LookML queries",
                              "SQL": "SQL type queries"
                            },
                            "name": "ChartQueryType",
                            "namespace": "com.linkedin.pegasus2avro.chart",
                            "symbols": [
                              "LOOKML",
                              "SQL"
                            ]
                          },
                          "name": "type",
                          "doc": "Chart query type"
                        }
                      ],
                      "doc": "Information for chart query which is used for getting data of the chart"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "editableChartProperties"
                      },
                      "name": "EditableChartProperties",
                      "namespace": "com.linkedin.pegasus2avro.chart",
                      "fields": [
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "created",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "lastModified",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.AuditStamp"
                          ],
                          "name": "deleted",
                          "default": null,
                          "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
                        },
                        {
                          "Searchable": {
                            "fieldName": "editedDescription",
                            "fieldType": "TEXT"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Edited documentation of the chart "
                        }
                      ],
                      "doc": "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "ownership"
                      },
                      "name": "Ownership",
                      "namespace": "com.linkedin.pegasus2avro.common",
                      "fields": [
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "Owner",
                              "namespace": "com.linkedin.pegasus2avro.common",
                              "fields": [
                                {
                                  "Relationship": {
                                    "entityTypes": [
                                      "corpUser",
                                      "corpGroup"
                                    ],
                                    "name": "OwnedBy"
                                  },
                                  "Searchable": {
                                    "fieldName": "owners",
                                    "fieldType": "URN",
                                    "hasValuesFieldName": "hasOwners",
                                    "queryByDefault": false
                                  },
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                                  },
                                  "type": "string",
                                  "name": "owner",
                                  "doc": "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\n(Caveat: only corpuser is currently supported in the frontend.)"
                                },
                                {
                                  "type": {
                                    "type": "enum",
                                    "symbolDocs": {
                                      "CONSUMER": "A person, group, or service that consumes the data",
                                      "DATAOWNER": "A person or group that is owning the data",
                                      "DELEGATE": "A person or a group that overseas the operation, e.g. a DBA or SRE.",
                                      "DEVELOPER": "A person or group that is in charge of developing the code",
                                      "PRODUCER": "A person, group, or service that produces/generates the data",
                                      "STAKEHOLDER": "A person or a group that has direct business interest"
                                    },
                                    "name": "OwnershipType",
                                    "namespace": "com.linkedin.pegasus2avro.common",
                                    "symbols": [
                                      "DEVELOPER",
                                      "DATAOWNER",
                                      "DELEGATE",
                                      "PRODUCER",
                                      "CONSUMER",
                                      "STAKEHOLDER"
                                    ],
                                    "doc": "Owner category or owner role"
                                  },
                                  "name": "type",
                                  "doc": "The type of the ownership"
                                },
                                {
                                  "type": [
                                    "null",
                                    {
                                      "type": "record",
                                      "name": "OwnershipSource",
                                      "namespace": "com.linkedin.pegasus2avro.common",
                                      "fields": [
                                        {
                                          "type": {
                                            "type": "enum",
                                            "symbolDocs": {
                                              "AUDIT": "Auditing system or audit logs",
                                              "DATABASE": "Database, e.g. GRANTS table",
                                              "FILE_SYSTEM": "File system, e.g. file/directory owner",
                                              "ISSUE_TRACKING_SYSTEM": "Issue tracking system, e.g. Jira",
                                              "MANUAL": "Manually provided by a user",
                                              "OTHER": "Other sources",
                                              "SERVICE": "Other ownership-like service, e.g. Nuage, ACL service etc",
                                              "SOURCE_CONTROL": "SCM system, e.g. GIT, SVN"
                                            },
                                            "name": "OwnershipSourceType",
                                            "namespace": "com.linkedin.pegasus2avro.common",
                                            "symbols": [
                                              "AUDIT",
                                              "DATABASE",
                                              "FILE_SYSTEM",
                                              "ISSUE_TRACKING_SYSTEM",
                                              "MANUAL",
                                              "SERVICE",
                                              "SOURCE_CONTROL",
                                              "OTHER"
                                            ]
                                          },
                                          "name": "type",
                                          "doc": "The type of the source"
                                        },
                                        {
                                          "type": [
                                            "null",
                                            "string"
                                          ],
                                          "name": "url",
                                          "default": null,
                                          "doc": "A reference URL for the source"
                                        }
                                      ],
                                      "doc": "Source/provider of the ownership information"
                                    }
                                  ],
                                  "name": "source",
                                  "default": null,
                                  "doc": "Source information for the ownership"
                                }
                              ],
                              "doc": "Ownership information"
                            }
                          },
                          "name": "owners",
                          "doc": "List of owners of the entity."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "lastModified",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data."
                        }
                      ],
                      "doc": "Ownership information of an entity."
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "status"
                      },
                      "name": "Status",
                      "namespace": "com.linkedin.pegasus2avro.common",
                      "fields": [
                        {
                          "Searchable": {
                            "fieldType": "BOOLEAN"
                          },
                          "type": "boolean",
                          "name": "removed",
                          "default": false,
                          "doc": "whether the entity is removed or not"
                        }
                      ],
                      "doc": "The status metadata of an entity, e.g. dataset, metric, feature, etc."
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "globalTags"
                      },
                      "name": "GlobalTags",
                      "namespace": "com.linkedin.pegasus2avro.common",
                      "fields": [
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "TagAssociation",
                              "namespace": "com.linkedin.pegasus2avro.common",
                              "fields": [
                                {
                                  "Searchable": {
                                    "fieldName": "tags",
                                    "fieldType": "URN_PARTIAL",
                                    "hasValuesFieldName": "hasTags"
                                  },
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.urn.TagUrn"
                                  },
                                  "type": "string",
                                  "name": "tag",
                                  "doc": "Urn of the applied tag"
                                }
                              ],
                              "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\npropagation parameters."
                            }
                          },
                          "name": "tags",
                          "doc": "Tags associated with a given entity"
                        }
                      ],
                      "doc": "Tag aspect used for applying tags to an entity"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "browsePaths"
                      },
                      "name": "BrowsePaths",
                      "namespace": "com.linkedin.pegasus2avro.common",
                      "fields": [
                        {
                          "Searchable": {
                            "/*": {
                              "fieldName": "browsePaths",
                              "fieldType": "BROWSE_PATH"
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "paths",
                          "doc": "A list of valid browse paths for the entity.\n\nBrowse paths are expected to be backslash-separated strings. For example: 'prod/snowflake/datasetName'"
                        }
                      ],
                      "doc": "Shared aspect containing Browse Paths to be indexed for an entity."
                    }
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the chart. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific Chart entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "corpGroupKey",
              "name": "corpGroup"
            },
            "name": "CorpGroupSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.CorpGroupUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "corpGroupKey"
                      },
                      "name": "CorpGroupKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "type": "string",
                          "name": "name",
                          "doc": "The name of the AD/LDAP group."
                        }
                      ],
                      "doc": "Key for a CorpGroup"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "EntityUrns": [
                          "com.linkedin.pegasus2avro.common.CorpGroupUrn"
                        ],
                        "name": "corpGroupInfo"
                      },
                      "name": "CorpGroupInfo",
                      "namespace": "com.linkedin.pegasus2avro.identity",
                      "fields": [
                        {
                          "type": "string",
                          "name": "email",
                          "doc": "email of this group"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "corpUser"
                              ],
                              "name": "OwnedBy"
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "admins",
                          "doc": "owners of this group"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "corpUser"
                              ],
                              "name": "IsPartOf"
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "members",
                          "doc": "List of ldap urn in this group."
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "corpGroup"
                              ],
                              "name": "IsPartOf"
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "groups",
                          "doc": "List of groups in this group."
                        }
                      ],
                      "doc": "group of corpUser, it may contains nested group"
                    },
                    "com.linkedin.pegasus2avro.common.GlobalTags",
                    "com.linkedin.pegasus2avro.common.Status"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the LdapUser. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific CorpGroup entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "corpUserKey",
              "name": "corpuser"
            },
            "name": "CorpUserSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.CorpuserUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "corpUserKey"
                      },
                      "name": "CorpUserKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "boostScore": 2.0,
                            "enableAutocomplete": true,
                            "fieldName": "ldap",
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "username",
                          "doc": "The name of the AD/LDAP user."
                        }
                      ],
                      "doc": "Key for a CorpUser"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "EntityUrns": [
                          "com.linkedin.pegasus2avro.common.CorpuserUrn"
                        ],
                        "name": "corpUserInfo"
                      },
                      "name": "CorpUserInfo",
                      "namespace": "com.linkedin.pegasus2avro.identity",
                      "fields": [
                        {
                          "Searchable": {
                            "fieldType": "BOOLEAN",
                            "weightsPerFieldValue": {
                              "true": 2.0
                            }
                          },
                          "type": "boolean",
                          "name": "active",
                          "doc": "Whether the corpUser is active, ref: https://iwww.corp.linkedin.com/wiki/cf/display/GTSD/Accessing+Active+Directory+via+LDAP+tools"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "displayName",
                          "default": null,
                          "doc": "displayName of this user ,  e.g.  Hang Zhang(DataHQ)"
                        },
                        {
                          "Searchable": {
                            "fieldType": "KEYWORD",
                            "queryByDefault": true
                          },
                          "type": "string",
                          "name": "email",
                          "doc": "email address of this user"
                        },
                        {
                          "Searchable": {
                            "fieldType": "KEYWORD",
                            "queryByDefault": true
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "title",
                          "default": null,
                          "doc": "title of this user"
                        },
                        {
                          "Relationship": {
                            "entityTypes": [
                              "corpUser"
                            ],
                            "name": "ReportsTo"
                          },
                          "Searchable": {
                            "fieldName": "managerLdap",
                            "fieldType": "URN",
                            "queryByDefault": true
                          },
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.CorpuserUrn"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "managerUrn",
                          "default": null,
                          "doc": "direct manager of this user"
                        },
                        {
                          "type": [
                            "null",
                            "long"
                          ],
                          "name": "departmentId",
                          "default": null,
                          "doc": "department id this user belong to"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "departmentName",
                          "default": null,
                          "doc": "department name this user belong to"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "firstName",
                          "default": null,
                          "doc": "first name of this user"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "lastName",
                          "default": null,
                          "doc": "last name of this user"
                        },
                        {
                          "Searchable": {
                            "boostScore": 10.0,
                            "fieldType": "TEXT_PARTIAL",
                            "queryByDefault": true
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "fullName",
                          "default": null,
                          "doc": "Common name of this user, format is firstName + lastName (split by a whitespace)"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "countryCode",
                          "default": null,
                          "doc": "two uppercase letters country code. e.g.  US"
                        }
                      ],
                      "doc": "Linkedin corp user information"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "EntityUrns": [
                          "com.linkedin.pegasus2avro.common.CorpuserUrn"
                        ],
                        "name": "corpUserEditableInfo"
                      },
                      "name": "CorpUserEditableInfo",
                      "namespace": "com.linkedin.pegasus2avro.identity",
                      "fields": [
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "aboutMe",
                          "default": null,
                          "doc": "About me section of the user"
                        },
                        {
                          "Searchable": {
                            "/*": {
                              "fieldType": "TEXT"
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "teams",
                          "default": [],
                          "doc": "Teams that the user belongs to e.g. Metadata"
                        },
                        {
                          "Searchable": {
                            "/*": {
                              "fieldType": "TEXT"
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "skills",
                          "default": [],
                          "doc": "Skills that the user possesses e.g. Machine Learning"
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": "string",
                          "name": "pictureLink",
                          "default": "https://raw.githubusercontent.com/linkedin/datahub/master/datahub-web/packages/data-portal/public/assets/images/default_avatar.png",
                          "doc": "A URL which points to a picture which user wants to set as a profile photo"
                        }
                      ],
                      "doc": "Linkedin corp user information that can be edited from UI"
                    },
                    "com.linkedin.pegasus2avro.common.GlobalTags",
                    "com.linkedin.pegasus2avro.common.Status"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the CorpUser. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific CorpUser entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "dashboardKey",
              "name": "dashboard"
            },
            "name": "DashboardSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DashboardUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dashboardKey"
                      },
                      "name": "DashboardKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "boostScore": 4.0,
                            "fieldName": "tool",
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "dashboardTool",
                          "doc": "The name of the dashboard tool such as looker, redash etc."
                        },
                        {
                          "type": "string",
                          "name": "dashboardId",
                          "doc": "Unique id for the dashboard. This id should be globally unique for a dashboarding tool even when there are multiple deployments of it. As an example, dashboard URL could be used here for Looker such as 'looker.linkedin.com/dashboards/1234'"
                        }
                      ],
                      "doc": "Key for a Dashboard"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dashboardInfo"
                      },
                      "name": "DashboardInfo",
                      "namespace": "com.linkedin.pegasus2avro.dashboard",
                      "fields": [
                        {
                          "type": {
                            "type": "map",
                            "values": "string"
                          },
                          "name": "customProperties",
                          "default": {},
                          "doc": "Custom property bag."
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "externalUrl",
                          "default": null,
                          "doc": "URL where the reference exist"
                        },
                        {
                          "Searchable": {
                            "boostScore": 10.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "title",
                          "doc": "Title of the dashboard"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT",
                            "hasValuesFieldName": "hasDescription"
                          },
                          "type": "string",
                          "name": "description",
                          "doc": "Detailed description about the dashboard"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "chart"
                              ],
                              "name": "Contains"
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "charts",
                          "default": [],
                          "doc": "Charts in a dashboard"
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.ChangeAuditStamps",
                          "name": "lastModified",
                          "doc": "Captures information about who created/last modified/deleted this dashboard and when"
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "dashboardUrl",
                          "default": null,
                          "doc": "URL for the dashboard. This could be used as an external link on DataHub to allow users access/view the dashboard"
                        },
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "KEYWORD"
                          },
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.AccessLevel"
                          ],
                          "name": "access",
                          "default": null,
                          "doc": "Access level for the dashboard"
                        },
                        {
                          "type": [
                            "null",
                            "long"
                          ],
                          "name": "lastRefreshed",
                          "default": null,
                          "doc": "The time when this dashboard last refreshed"
                        }
                      ],
                      "doc": "Information about a dashboard"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "editableDashboardProperties"
                      },
                      "name": "EditableDashboardProperties",
                      "namespace": "com.linkedin.pegasus2avro.dashboard",
                      "fields": [
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "created",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "lastModified",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.AuditStamp"
                          ],
                          "name": "deleted",
                          "default": null,
                          "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
                        },
                        {
                          "Searchable": {
                            "fieldName": "editedDescription",
                            "fieldType": "TEXT"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Edited documentation of the dashboard"
                        }
                      ],
                      "doc": "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.Status",
                    "com.linkedin.pegasus2avro.common.GlobalTags",
                    "com.linkedin.pegasus2avro.common.BrowsePaths"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the dashboard. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific Dashboard entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "dataFlowKey",
              "name": "dataFlow"
            },
            "name": "DataFlowSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DataFlowUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataFlowKey"
                      },
                      "name": "DataFlowKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "orchestrator",
                          "doc": "Workflow manager like azkaban, airflow which orchestrates the flow"
                        },
                        {
                          "Searchable": {
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "flowId",
                          "doc": "Unique Identifier of the data flow"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "cluster",
                          "doc": "Cluster where the flow is executed"
                        }
                      ],
                      "doc": "Key for a Data Flow"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataFlowInfo"
                      },
                      "name": "DataFlowInfo",
                      "namespace": "com.linkedin.pegasus2avro.datajob",
                      "fields": [
                        {
                          "type": {
                            "type": "map",
                            "values": "string"
                          },
                          "name": "customProperties",
                          "default": {},
                          "doc": "Custom property bag."
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "externalUrl",
                          "default": null,
                          "doc": "URL where the reference exist"
                        },
                        {
                          "Searchable": {
                            "boostScore": 10.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Flow name"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT",
                            "hasValuesFieldName": "hasDescription"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Flow description"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT_PARTIAL",
                            "queryByDefault": false
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "project",
                          "default": null,
                          "doc": "Optional project/namespace associated with the flow"
                        }
                      ],
                      "doc": "Information about a Data processing flow"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "editableDataFlowProperties"
                      },
                      "name": "EditableDataFlowProperties",
                      "namespace": "com.linkedin.pegasus2avro.datajob",
                      "fields": [
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "created",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "lastModified",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.AuditStamp"
                          ],
                          "name": "deleted",
                          "default": null,
                          "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
                        },
                        {
                          "Searchable": {
                            "fieldName": "editedDescription",
                            "fieldType": "TEXT"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Edited documentation of the data flow"
                        }
                      ],
                      "doc": "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.Status",
                    "com.linkedin.pegasus2avro.common.GlobalTags",
                    "com.linkedin.pegasus2avro.common.BrowsePaths"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the data flow. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific DataFlow entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "dataJobKey",
              "name": "dataJob"
            },
            "name": "DataJobSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DataJobUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataJobKey"
                      },
                      "name": "DataJobKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Relationship": {
                            "entityTypes": [
                              "dataFlow"
                            ],
                            "name": "IsPartOf"
                          },
                          "Searchable": {
                            "fieldName": "dataFlow",
                            "fieldType": "URN_PARTIAL",
                            "queryByDefault": false
                          },
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                          },
                          "type": "string",
                          "name": "flow",
                          "doc": "Standardized data processing flow urn representing the flow for the job"
                        },
                        {
                          "Searchable": {
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "jobId",
                          "doc": "Unique Identifier of the data job"
                        }
                      ],
                      "doc": "Key for a Data Job"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataJobInfo"
                      },
                      "name": "DataJobInfo",
                      "namespace": "com.linkedin.pegasus2avro.datajob",
                      "fields": [
                        {
                          "type": {
                            "type": "map",
                            "values": "string"
                          },
                          "name": "customProperties",
                          "default": {},
                          "doc": "Custom property bag."
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "externalUrl",
                          "default": null,
                          "doc": "URL where the reference exist"
                        },
                        {
                          "Searchable": {
                            "boostScore": 10.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Job name"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT",
                            "hasValuesFieldName": "hasDescription"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Job description"
                        },
                        {
                          "type": [
                            {
                              "type": "enum",
                              "symbolDocs": {
                                "COMMAND": "The command job type is one of the basic built-in types. It runs multiple UNIX commands using java processbuilder.\nUpon execution, Azkaban spawns off a process to run the command.",
                                "GLUE": "Glue type is for running AWS Glue job transforms.",
                                "HADOOP_JAVA": "Runs a java program with ability to access Hadoop cluster.\nhttps://azkaban.readthedocs.io/en/latest/jobTypes.html#java-job-type",
                                "HADOOP_SHELL": "In large part, this is the same Command type. The difference is its ability to talk to a Hadoop cluster\nsecurely, via Hadoop tokens.",
                                "HIVE": "Hive type is for running Hive jobs.",
                                "PIG": "Pig type is for running Pig jobs.",
                                "SQL": "SQL is for running Presto, mysql queries etc"
                              },
                              "name": "AzkabanJobType",
                              "namespace": "com.linkedin.pegasus2avro.datajob.azkaban",
                              "symbols": [
                                "COMMAND",
                                "HADOOP_JAVA",
                                "HADOOP_SHELL",
                                "HIVE",
                                "PIG",
                                "SQL",
                                "GLUE"
                              ],
                              "doc": "The various types of support azkaban jobs"
                            },
                            "string"
                          ],
                          "name": "type",
                          "doc": "Datajob type\n**NOTE**: AzkabanJobType is deprecated. Please use strings instead."
                        },
                        {
                          "Relationship": {
                            "entityTypes": [
                              "dataFlow"
                            ],
                            "name": "IsPartOf"
                          },
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.DataFlowUrn"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "flowUrn",
                          "default": null,
                          "doc": "DataFlow urn that this job is part of"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "enum",
                              "symbolDocs": {
                                "COMPLETED": "Jobs with successful completion.",
                                "FAILED": "Jobs that have failed.",
                                "IN_PROGRESS": "Jobs currently running.",
                                "STARTING": "Jobs being initialized.",
                                "STOPPED": "Jobs that have stopped.",
                                "STOPPING": "Jobs being stopped.",
                                "UNKNOWN": "Jobs with unknown status (either unmappable or unavailable)"
                              },
                              "name": "JobStatus",
                              "namespace": "com.linkedin.pegasus2avro.datajob",
                              "symbols": [
                                "STARTING",
                                "IN_PROGRESS",
                                "STOPPING",
                                "STOPPED",
                                "COMPLETED",
                                "FAILED",
                                "UNKNOWN"
                              ],
                              "doc": "Job statuses"
                            }
                          ],
                          "name": "status",
                          "default": null,
                          "doc": "Status of the job"
                        }
                      ],
                      "doc": "Information about a Data processing job"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataJobInputOutput"
                      },
                      "name": "DataJobInputOutput",
                      "namespace": "com.linkedin.pegasus2avro.datajob",
                      "fields": [
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "dataset"
                              ],
                              "name": "Consumes"
                            }
                          },
                          "Searchable": {
                            "/*": {
                              "fieldName": "inputs",
                              "fieldType": "URN",
                              "numValuesFieldName": "numInputDatasets",
                              "queryByDefault": false
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "inputDatasets",
                          "doc": "Input datasets consumed by the data job during processing"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "dataset"
                              ],
                              "name": "Produces"
                            }
                          },
                          "Searchable": {
                            "/*": {
                              "fieldName": "outputs",
                              "fieldType": "URN",
                              "numValuesFieldName": "numOutputDatasets",
                              "queryByDefault": false
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "outputDatasets",
                          "doc": "Output datasets produced by the data job during processing"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "dataJob"
                              ],
                              "name": "DownstreamOf"
                            }
                          },
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "inputDatajobs",
                          "default": null,
                          "doc": "Input datajobs that this data job depends on"
                        }
                      ],
                      "doc": "Information about the inputs and outputs of a Data processing job"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "editableDataJobProperties"
                      },
                      "name": "EditableDataJobProperties",
                      "namespace": "com.linkedin.pegasus2avro.datajob",
                      "fields": [
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "created",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "lastModified",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.AuditStamp"
                          ],
                          "name": "deleted",
                          "default": null,
                          "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
                        },
                        {
                          "Searchable": {
                            "fieldName": "editedDescription",
                            "fieldType": "TEXT"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Edited documentation of the data job "
                        }
                      ],
                      "doc": "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.Status",
                    "com.linkedin.pegasus2avro.common.GlobalTags",
                    "com.linkedin.pegasus2avro.common.BrowsePaths"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the data job. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific DataJob entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "datasetKey",
              "name": "dataset"
            },
            "name": "DatasetSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "datasetKey"
                      },
                      "name": "DatasetKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "URN"
                          },
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                          },
                          "type": "string",
                          "name": "platform",
                          "doc": "Data platform urn associated with the dataset"
                        },
                        {
                          "Searchable": {
                            "boostScore": 10.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Dataset native name e.g. <db>.<table>, /dir/subdir/<name>, or <name>"
                        },
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "TEXT_PARTIAL",
                            "queryByDefault": false
                          },
                          "type": {
                            "type": "enum",
                            "symbolDocs": {
                              "CORP": "Designates corporation fabrics",
                              "DEV": "Designates development fabrics",
                              "EI": "Designates early-integration (staging) fabrics",
                              "PROD": "Designates production fabrics"
                            },
                            "name": "FabricType",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "symbols": [
                              "DEV",
                              "EI",
                              "PROD",
                              "CORP"
                            ],
                            "doc": "Fabric group type"
                          },
                          "name": "origin",
                          "doc": "Fabric type where dataset belongs to or where it was generated."
                        }
                      ],
                      "doc": "Key for a Dataset"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "datasetProperties"
                      },
                      "name": "DatasetProperties",
                      "namespace": "com.linkedin.pegasus2avro.dataset",
                      "fields": [
                        {
                          "type": {
                            "type": "map",
                            "values": "string"
                          },
                          "name": "customProperties",
                          "default": {},
                          "doc": "Custom property bag."
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "externalUrl",
                          "default": null,
                          "doc": "URL where the reference exist"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT",
                            "hasValuesFieldName": "hasDescription"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Documentation of the dataset"
                        },
                        {
                          "java": {
                            "class": "java.net.URI"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "uri",
                          "default": null,
                          "doc": "The abstracted URI such as hdfs:///data/tracking/PageViewEvent, file:///dir/file_name. Uri should not include any environment specific properties. Some datasets might not have a standardized uri, which makes this field optional (i.e. kafka topic)."
                        },
                        {
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "tags",
                          "default": [],
                          "doc": "[Legacy] Unstructured tags for the dataset. Structured tags can be applied via the `GlobalTags` aspect."
                        }
                      ],
                      "doc": "Properties associated with a Dataset"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "editableDatasetProperties"
                      },
                      "name": "EditableDatasetProperties",
                      "namespace": "com.linkedin.pegasus2avro.dataset",
                      "fields": [
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "created",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "lastModified",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.AuditStamp"
                          ],
                          "name": "deleted",
                          "default": null,
                          "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
                        },
                        {
                          "Searchable": {
                            "fieldName": "editedDescription",
                            "fieldType": "TEXT"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Documentation of the dataset"
                        }
                      ],
                      "doc": "EditableDatasetProperties stores editable changes made to dataset properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "datasetDeprecation"
                      },
                      "name": "DatasetDeprecation",
                      "namespace": "com.linkedin.pegasus2avro.dataset",
                      "fields": [
                        {
                          "Searchable": {
                            "fieldType": "BOOLEAN",
                            "weightsPerFieldValue": {
                              "true": 0.5
                            }
                          },
                          "type": "boolean",
                          "name": "deprecated",
                          "doc": "Whether the dataset is deprecated by owner."
                        },
                        {
                          "type": [
                            "null",
                            "long"
                          ],
                          "name": "decommissionTime",
                          "default": null,
                          "doc": "The time user plan to decommission this dataset."
                        },
                        {
                          "type": "string",
                          "name": "note",
                          "doc": "Additional information about the dataset deprecation plan, such as the wiki, doc, RB."
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "actor",
                          "default": null,
                          "doc": "The corpuser URN which will be credited for modifying this deprecation content."
                        }
                      ],
                      "doc": "Dataset deprecation status"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "datasetUpstreamLineage"
                      },
                      "name": "DatasetUpstreamLineage",
                      "namespace": "com.linkedin.pegasus2avro.dataset",
                      "fields": [
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "DatasetFieldMapping",
                              "namespace": "com.linkedin.pegasus2avro.dataset",
                              "fields": [
                                {
                                  "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                                  "name": "created",
                                  "doc": "Audit stamp containing who reported the field mapping and when"
                                },
                                {
                                  "type": [
                                    {
                                      "type": "enum",
                                      "symbolDocs": {
                                        "BLACKBOX": "Field transformation expressed as unknown black box function.",
                                        "IDENTITY": "Field transformation expressed as Identity function."
                                      },
                                      "name": "TransformationType",
                                      "namespace": "com.linkedin.pegasus2avro.common.fieldtransformer",
                                      "symbols": [
                                        "BLACKBOX",
                                        "IDENTITY"
                                      ],
                                      "doc": "Type of the transformation involved in generating destination fields from source fields."
                                    },
                                    {
                                      "type": "record",
                                      "name": "UDFTransformer",
                                      "namespace": "com.linkedin.pegasus2avro.common.fieldtransformer",
                                      "fields": [
                                        {
                                          "type": "string",
                                          "name": "udf",
                                          "doc": "A UDF mentioning how the source fields got transformed to destination field. This is the FQCN(Fully Qualified Class Name) of the udf."
                                        }
                                      ],
                                      "doc": "Field transformation expressed in UDF"
                                    }
                                  ],
                                  "name": "transformation",
                                  "doc": "Transfomration function between the fields involved"
                                },
                                {
                                  "type": {
                                    "type": "array",
                                    "items": [
                                      "string"
                                    ]
                                  },
                                  "name": "sourceFields",
                                  "doc": "Source fields from which the fine grained lineage is derived"
                                },
                                {
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.urn.DatasetFieldUrn"
                                  },
                                  "type": "string",
                                  "name": "destinationField",
                                  "doc": "Destination field which is derived from source fields"
                                }
                              ],
                              "doc": "Representation of mapping between fields in source dataset to the field in destination dataset"
                            }
                          },
                          "name": "fieldMappings",
                          "doc": "Upstream to downstream field level lineage mappings"
                        }
                      ],
                      "doc": "Fine Grained upstream lineage for fields in a dataset"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "upstreamLineage"
                      },
                      "name": "UpstreamLineage",
                      "namespace": "com.linkedin.pegasus2avro.dataset",
                      "fields": [
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "Upstream",
                              "namespace": "com.linkedin.pegasus2avro.dataset",
                              "fields": [
                                {
                                  "deprecated": "we no longer associate a timestamp per upstream edge",
                                  "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                                  "name": "auditStamp",
                                  "default": {
                                    "actor": "urn:li:corpuser:unknown",
                                    "impersonator": null,
                                    "time": 0
                                  },
                                  "doc": "Audit stamp containing who reported the lineage and when.\nWARNING: this field is deprecated and may be removed in a future release."
                                },
                                {
                                  "Relationship": {
                                    "entityTypes": [
                                      "dataset"
                                    ],
                                    "name": "DownstreamOf"
                                  },
                                  "Searchable": {
                                    "fieldName": "upstreams",
                                    "fieldType": "URN",
                                    "queryByDefault": false
                                  },
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                                  },
                                  "type": "string",
                                  "name": "dataset",
                                  "doc": "The upstream dataset the lineage points to"
                                },
                                {
                                  "type": {
                                    "type": "enum",
                                    "symbolDocs": {
                                      "COPY": "Direct copy without modification",
                                      "TRANSFORMED": "Transformed data with modification (format or content change)",
                                      "VIEW": "Represents a view defined on the sources e.g. Hive view defined on underlying hive tables or a Hive table pointing to a HDFS dataset or DALI view defined on multiple sources"
                                    },
                                    "name": "DatasetLineageType",
                                    "namespace": "com.linkedin.pegasus2avro.dataset",
                                    "symbols": [
                                      "COPY",
                                      "TRANSFORMED",
                                      "VIEW"
                                    ],
                                    "doc": "The various types of supported dataset lineage"
                                  },
                                  "name": "type",
                                  "doc": "The type of the lineage"
                                }
                              ],
                              "doc": "Upstream lineage information about a dataset including the source reporting the lineage"
                            }
                          },
                          "name": "upstreams",
                          "doc": "List of upstream dataset lineage information"
                        }
                      ],
                      "doc": "Upstream lineage of a dataset"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "institutionalMemory"
                      },
                      "name": "InstitutionalMemory",
                      "namespace": "com.linkedin.pegasus2avro.common",
                      "fields": [
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "InstitutionalMemoryMetadata",
                              "namespace": "com.linkedin.pegasus2avro.common",
                              "fields": [
                                {
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.url.Url",
                                    "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                                  },
                                  "type": "string",
                                  "name": "url",
                                  "doc": "Link to an engineering design document or a wiki page."
                                },
                                {
                                  "type": "string",
                                  "name": "description",
                                  "doc": "Description of the link."
                                },
                                {
                                  "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                                  "name": "createStamp",
                                  "doc": "Audit stamp associated with creation of this record"
                                }
                              ],
                              "doc": "Metadata corresponding to a record of institutional memory."
                            }
                          },
                          "name": "elements",
                          "doc": "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."
                        }
                      ],
                      "doc": "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.Status",
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "schemaMetadata"
                      },
                      "name": "SchemaMetadata",
                      "namespace": "com.linkedin.pegasus2avro.schema",
                      "fields": [
                        {
                          "validate": {
                            "strlen": {
                              "max": 500,
                              "min": 1
                            }
                          },
                          "type": "string",
                          "name": "schemaName",
                          "doc": "Schema name e.g. PageViewEvent, identity.Profile, ams.account_management_tracking"
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.DataPlatformUrn"
                          },
                          "type": "string",
                          "name": "platform",
                          "doc": "Standardized platform urn where schema is defined. The data platform Urn (urn:li:platform:{platform_name})"
                        },
                        {
                          "type": "long",
                          "name": "version",
                          "doc": "Every change to SchemaMetadata in the resource results in a new version. Version is server assigned. This version is differ from platform native schema version."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "created",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "lastModified",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.AuditStamp"
                          ],
                          "name": "deleted",
                          "default": null,
                          "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "dataset",
                          "default": null,
                          "doc": "Dataset this schema metadata is associated with."
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "cluster",
                          "default": null,
                          "doc": "The cluster this schema metadata resides from"
                        },
                        {
                          "type": "string",
                          "name": "hash",
                          "doc": "the SHA1 hash of the schema content"
                        },
                        {
                          "type": [
                            {
                              "type": "record",
                              "name": "EspressoSchema",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "documentSchema",
                                  "doc": "The native espresso document schema."
                                },
                                {
                                  "type": "string",
                                  "name": "tableSchema",
                                  "doc": "The espresso table schema definition."
                                }
                              ],
                              "doc": "Schema text of an espresso table schema."
                            },
                            {
                              "type": "record",
                              "name": "OracleDDL",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "tableSchema",
                                  "doc": "The native schema in the dataset's platform. This is a human readable (json blob) table schema."
                                }
                              ],
                              "doc": "Schema holder for oracle data definition language that describes an oracle table."
                            },
                            {
                              "type": "record",
                              "name": "MySqlDDL",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "tableSchema",
                                  "doc": "The native schema in the dataset's platform. This is a human readable (json blob) table schema."
                                }
                              ],
                              "doc": "Schema holder for MySql data definition language that describes an MySql table."
                            },
                            {
                              "type": "record",
                              "name": "PrestoDDL",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "rawSchema",
                                  "doc": "The raw schema in the dataset's platform. This includes the DDL and the columns extracted from DDL."
                                }
                              ],
                              "doc": "Schema holder for presto data definition language that describes a presto view."
                            },
                            {
                              "type": "record",
                              "name": "KafkaSchema",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "documentSchema",
                                  "doc": "The native kafka document schema. This is a human readable avro document schema."
                                }
                              ],
                              "doc": "Schema holder for kafka schema."
                            },
                            {
                              "type": "record",
                              "name": "BinaryJsonSchema",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "schema",
                                  "doc": "The native schema text for binary JSON file format."
                                }
                              ],
                              "doc": "Schema text of binary JSON schema."
                            },
                            {
                              "type": "record",
                              "name": "OrcSchema",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "schema",
                                  "doc": "The native schema for ORC file format."
                                }
                              ],
                              "doc": "Schema text of an ORC schema."
                            },
                            {
                              "type": "record",
                              "name": "Schemaless",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [],
                              "doc": "The dataset has no specific schema associated with it"
                            },
                            {
                              "type": "record",
                              "name": "KeyValueSchema",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "keySchema",
                                  "doc": "The raw schema for the key in the key-value store."
                                },
                                {
                                  "type": "string",
                                  "name": "valueSchema",
                                  "doc": "The raw schema for the value in the key-value store."
                                }
                              ],
                              "doc": "Schema text of a key-value store schema."
                            },
                            {
                              "type": "record",
                              "name": "OtherSchema",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "rawSchema",
                                  "doc": "The native schema in the dataset's platform."
                                }
                              ],
                              "doc": "Schema holder for undefined schema types."
                            }
                          ],
                          "name": "platformSchema",
                          "doc": "The native schema in the dataset's platform."
                        },
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "SchemaField",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "Searchable": {
                                    "fieldName": "fieldPaths",
                                    "fieldType": "TEXT_PARTIAL"
                                  },
                                  "type": "string",
                                  "name": "fieldPath",
                                  "doc": "Flattened name of the field. Field is computed from jsonPath field. For data translation rules refer to wiki page above."
                                },
                                {
                                  "type": [
                                    "null",
                                    "string"
                                  ],
                                  "name": "jsonPath",
                                  "default": null,
                                  "doc": "Flattened name of a field in JSON Path notation."
                                },
                                {
                                  "type": "boolean",
                                  "name": "nullable",
                                  "default": false,
                                  "doc": "Indicates if this field is optional or nullable"
                                },
                                {
                                  "Searchable": {
                                    "boostScore": 0.1,
                                    "fieldName": "fieldDescriptions",
                                    "fieldType": "TEXT"
                                  },
                                  "type": [
                                    "null",
                                    "string"
                                  ],
                                  "name": "description",
                                  "default": null,
                                  "doc": "Description"
                                },
                                {
                                  "type": {
                                    "type": "record",
                                    "name": "SchemaFieldDataType",
                                    "namespace": "com.linkedin.pegasus2avro.schema",
                                    "fields": [
                                      {
                                        "type": [
                                          {
                                            "type": "record",
                                            "name": "BooleanType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Boolean field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "FixedType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Fixed field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "StringType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "String field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "BytesType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Bytes field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "NumberType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Number data type: long, integer, short, etc.."
                                          },
                                          {
                                            "type": "record",
                                            "name": "DateType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Date field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "TimeType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Time field type. This should also be used for datetimes."
                                          },
                                          {
                                            "type": "record",
                                            "name": "EnumType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Enum field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "NullType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Null field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "MapType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [
                                              {
                                                "type": [
                                                  "null",
                                                  "string"
                                                ],
                                                "name": "keyType",
                                                "default": null,
                                                "doc": "Key type in a map"
                                              },
                                              {
                                                "type": [
                                                  "null",
                                                  "string"
                                                ],
                                                "name": "valueType",
                                                "default": null,
                                                "doc": "Type of the value in a map"
                                              }
                                            ],
                                            "doc": "Map field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "ArrayType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [
                                              {
                                                "type": [
                                                  "null",
                                                  {
                                                    "type": "array",
                                                    "items": "string"
                                                  }
                                                ],
                                                "name": "nestedType",
                                                "default": null,
                                                "doc": "List of types this array holds."
                                              }
                                            ],
                                            "doc": "Array field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "UnionType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [
                                              {
                                                "type": [
                                                  "null",
                                                  {
                                                    "type": "array",
                                                    "items": "string"
                                                  }
                                                ],
                                                "name": "nestedTypes",
                                                "default": null,
                                                "doc": "List of types in union type."
                                              }
                                            ],
                                            "doc": "Union field type."
                                          },
                                          {
                                            "type": "record",
                                            "name": "RecordType",
                                            "namespace": "com.linkedin.pegasus2avro.schema",
                                            "fields": [],
                                            "doc": "Record field type."
                                          }
                                        ],
                                        "name": "type",
                                        "doc": "Data platform specific types"
                                      }
                                    ],
                                    "doc": "Schema field data types"
                                  },
                                  "name": "type",
                                  "doc": "Platform independent field type of the field."
                                },
                                {
                                  "type": "string",
                                  "name": "nativeDataType",
                                  "doc": "The native type of the field in the dataset's platform as declared by platform schema."
                                },
                                {
                                  "type": "boolean",
                                  "name": "recursive",
                                  "default": false,
                                  "doc": "There are use cases when a field in type B references type A. A field in A references field of type B. In such cases, we will mark the first field as recursive."
                                },
                                {
                                  "Searchable": {
                                    "/tags/*/tag": {
                                      "boostScore": 0.5,
                                      "fieldName": "fieldTags",
                                      "fieldType": "URN_PARTIAL"
                                    }
                                  },
                                  "type": [
                                    "null",
                                    "com.linkedin.pegasus2avro.common.GlobalTags"
                                  ],
                                  "name": "globalTags",
                                  "default": null,
                                  "doc": "Tags associated with the field"
                                },
                                {
                                  "type": [
                                    "null",
                                    {
                                      "type": "record",
                                      "Aspect": {
                                        "name": "glossaryTerms"
                                      },
                                      "name": "GlossaryTerms",
                                      "namespace": "com.linkedin.pegasus2avro.common",
                                      "fields": [
                                        {
                                          "type": {
                                            "type": "array",
                                            "items": {
                                              "type": "record",
                                              "name": "GlossaryTermAssociation",
                                              "namespace": "com.linkedin.pegasus2avro.common",
                                              "fields": [
                                                {
                                                  "java": {
                                                    "class": "com.linkedin.pegasus2avro.common.urn.GlossaryTermUrn"
                                                  },
                                                  "type": "string",
                                                  "name": "urn",
                                                  "doc": "Urn of the applied glossary term"
                                                }
                                              ],
                                              "doc": "Properties of an applied glossary term."
                                            }
                                          },
                                          "name": "terms",
                                          "doc": "The related business terms"
                                        },
                                        {
                                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                                          "name": "auditStamp",
                                          "doc": "Audit stamp containing who reported the related business term"
                                        }
                                      ],
                                      "doc": "Related business terms information"
                                    }
                                  ],
                                  "name": "glossaryTerms",
                                  "default": null,
                                  "doc": "Glossary terms associated with the field"
                                }
                              ],
                              "doc": "SchemaField to describe metadata related to dataset schema. Schema normalization rules: http://go/tms-schema"
                            }
                          },
                          "name": "fields",
                          "doc": "Client provided a list of fields from document schema."
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "primaryKeys",
                          "default": null,
                          "doc": "Client provided list of fields that define primary keys to access record. Field order defines hierarchical espresso keys. Empty lists indicates absence of primary key access patter. Value is a SchemaField@fieldPath."
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "map",
                              "values": {
                                "type": "record",
                                "name": "ForeignKeySpec",
                                "namespace": "com.linkedin.pegasus2avro.schema",
                                "fields": [
                                  {
                                    "type": [
                                      {
                                        "type": "record",
                                        "name": "DatasetFieldForeignKey",
                                        "namespace": "com.linkedin.pegasus2avro.schema",
                                        "fields": [
                                          {
                                            "java": {
                                              "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                                            },
                                            "type": "string",
                                            "name": "parentDataset",
                                            "doc": "dataset that stores the resource."
                                          },
                                          {
                                            "type": {
                                              "type": "array",
                                              "items": "string"
                                            },
                                            "name": "currentFieldPaths",
                                            "doc": "List of fields in hosting(current) SchemaMetadata that conform a foreign key. List can contain a single entry or multiple entries if several entries in hosting schema conform a foreign key in a single parent dataset."
                                          },
                                          {
                                            "type": "string",
                                            "name": "parentField",
                                            "doc": "SchemaField@fieldPath that uniquely identify field in parent dataset that this field references."
                                          }
                                        ],
                                        "doc": "For non-urn based foregin keys."
                                      },
                                      {
                                        "type": "record",
                                        "name": "UrnForeignKey",
                                        "namespace": "com.linkedin.pegasus2avro.schema",
                                        "fields": [
                                          {
                                            "type": "string",
                                            "name": "currentFieldPath",
                                            "doc": "Field in hosting(current) SchemaMetadata."
                                          }
                                        ],
                                        "doc": "If SchemaMetadata fields make any external references and references are of type com.linkedin.pegasus2avro.common.Urn or any children, this models can be used to mark it."
                                      }
                                    ],
                                    "name": "foreignKey",
                                    "doc": "Foreign key definition in metadata schema."
                                  }
                                ],
                                "doc": "Description of a foreign key in a schema."
                              }
                            }
                          ],
                          "name": "foreignKeysSpecs",
                          "default": null,
                          "doc": "Map captures all the references schema makes to external datasets. Map key is ForeignKeySpecName typeref."
                        }
                      ],
                      "doc": "SchemaMetadata to describe metadata related to store schema"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "editableSchemaMetadata"
                      },
                      "name": "EditableSchemaMetadata",
                      "namespace": "com.linkedin.pegasus2avro.schema",
                      "fields": [
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "created",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                          "name": "lastModified",
                          "default": {
                            "actor": "urn:li:corpuser:unknown",
                            "impersonator": null,
                            "time": 0
                          },
                          "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.AuditStamp"
                          ],
                          "name": "deleted",
                          "default": null,
                          "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
                        },
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "EditableSchemaFieldInfo",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "fieldPath",
                                  "doc": "FieldPath uniquely identifying the SchemaField this metadata is associated with"
                                },
                                {
                                  "Searchable": {
                                    "boostScore": 0.1,
                                    "fieldName": "editedFieldDescriptions",
                                    "fieldType": "TEXT"
                                  },
                                  "type": [
                                    "null",
                                    "string"
                                  ],
                                  "name": "description",
                                  "default": null,
                                  "doc": "Description"
                                },
                                {
                                  "Searchable": {
                                    "/tags/*/tag": {
                                      "boostScore": 0.5,
                                      "fieldName": "editedFieldTags",
                                      "fieldType": "URN_PARTIAL"
                                    }
                                  },
                                  "type": [
                                    "null",
                                    "com.linkedin.pegasus2avro.common.GlobalTags"
                                  ],
                                  "name": "globalTags",
                                  "default": null,
                                  "doc": "Tags associated with the field"
                                }
                              ],
                              "doc": "SchemaField to describe metadata related to dataset schema."
                            }
                          },
                          "name": "editableSchemaFieldInfo",
                          "doc": "Client provided a list of fields from document schema."
                        }
                      ],
                      "doc": "EditableSchemaMetadata stores editable changes made to schema metadata. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines."
                    },
                    "com.linkedin.pegasus2avro.common.GlobalTags",
                    "com.linkedin.pegasus2avro.common.GlossaryTerms",
                    "com.linkedin.pegasus2avro.common.BrowsePaths"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ]
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "dataProcessKey",
              "name": "dataProcess"
            },
            "name": "DataProcessSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DataProcessUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataProcessKey"
                      },
                      "name": "DataProcessKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "boostScore": 4.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Process name i.e. an ETL job name"
                        },
                        {
                          "Searchable": {
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "orchestrator",
                          "doc": "Standardized Orchestrator where data process is defined.\nTODO: Migrate towards something that can be validated like DataPlatform urn"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT_PARTIAL",
                            "queryByDefault": false
                          },
                          "type": "com.linkedin.pegasus2avro.common.FabricType",
                          "name": "origin",
                          "doc": "Fabric type where dataset belongs to or where it was generated."
                        }
                      ],
                      "doc": "Key for a Data Process"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataProcessInfo"
                      },
                      "name": "DataProcessInfo",
                      "namespace": "com.linkedin.pegasus2avro.dataprocess",
                      "fields": [
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "dataset"
                              ],
                              "name": "Consumes"
                            }
                          },
                          "Searchable": {
                            "/*": {
                              "fieldName": "inputs",
                              "fieldType": "URN",
                              "numValuesFieldName": "numInputDatasets",
                              "queryByDefault": false
                            }
                          },
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "inputs",
                          "default": null,
                          "doc": "the inputs of the data process"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "dataset"
                              ],
                              "name": "Consumes"
                            }
                          },
                          "Searchable": {
                            "/*": {
                              "fieldName": "outputs",
                              "fieldType": "URN",
                              "numValuesFieldName": "numOutputDatasets",
                              "queryByDefault": false
                            }
                          },
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "outputs",
                          "default": null,
                          "doc": "the outputs of the data process"
                        }
                      ],
                      "doc": "The inputs and outputs of this data process"
                    },
                    "com.linkedin.pegasus2avro.common.Status"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the data process. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific Data process entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "dataPlatformKey",
              "name": "dataPlatform"
            },
            "name": "DataPlatformSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DataPlatformUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataPlatformKey"
                      },
                      "name": "DataPlatformKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "type": "string",
                          "name": "platformName",
                          "doc": "Data platform name i.e. hdfs, oracle, espresso"
                        }
                      ],
                      "doc": "Key for a Data Platform"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "dataPlatformInfo"
                      },
                      "name": "DataPlatformInfo",
                      "namespace": "com.linkedin.pegasus2avro.dataplatform",
                      "fields": [
                        {
                          "validate": {
                            "strlen": {
                              "max": 15
                            }
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Name of the data platform"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "displayName",
                          "default": null,
                          "doc": "The name that will be used for displaying a platform type."
                        },
                        {
                          "type": {
                            "type": "enum",
                            "symbolDocs": {
                              "FILE_SYSTEM": "Value for a file system, e.g. hdfs",
                              "KEY_VALUE_STORE": "Value for a key value store, e.g. espresso, voldemort",
                              "MESSAGE_BROKER": "Value for a message broker, e.g. kafka",
                              "OBJECT_STORE": "Value for an object store, e.g. ambry",
                              "OLAP_DATASTORE": "Value for an OLAP datastore, e.g. pinot",
                              "OTHERS": "Value for other platforms, e.g salesforce, dovetail",
                              "QUERY_ENGINE": "Value for a query engine, e.g. presto",
                              "RELATIONAL_DB": "Value for a relational database, e.g. oracle, mysql",
                              "SEARCH_ENGINE": "Value for a search engine, e.g seas"
                            },
                            "name": "PlatformType",
                            "namespace": "com.linkedin.pegasus2avro.dataplatform",
                            "symbols": [
                              "FILE_SYSTEM",
                              "KEY_VALUE_STORE",
                              "MESSAGE_BROKER",
                              "OBJECT_STORE",
                              "OLAP_DATASTORE",
                              "OTHERS",
                              "QUERY_ENGINE",
                              "RELATIONAL_DB",
                              "SEARCH_ENGINE"
                            ],
                            "doc": "Platform types available at LinkedIn"
                          },
                          "name": "type",
                          "doc": "Platform type this data platform describes"
                        },
                        {
                          "type": "string",
                          "name": "datasetNameDelimiter",
                          "doc": "The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle"
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "logoUrl",
                          "default": null,
                          "doc": "The URL for a logo associated with the platform"
                        }
                      ],
                      "doc": "Information about a data platform"
                    }
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the data platform. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific dataplatform entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "mlModelKey",
              "name": "mlModel"
            },
            "name": "MLModelSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.MLModelUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelKey"
                      },
                      "name": "MLModelKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "URN"
                          },
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                          },
                          "type": "string",
                          "name": "platform",
                          "doc": "Standardized platform urn for the model"
                        },
                        {
                          "Searchable": {
                            "boostScore": 10.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Name of the MLModel"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT_PARTIAL",
                            "queryByDefault": false
                          },
                          "type": "com.linkedin.pegasus2avro.common.FabricType",
                          "name": "origin",
                          "doc": "Fabric type where model belongs to or where it was generated"
                        }
                      ],
                      "doc": "Key for an ML model"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelProperties"
                      },
                      "name": "MLModelProperties",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": {
                            "type": "map",
                            "values": "string"
                          },
                          "name": "customProperties",
                          "default": {},
                          "doc": "Custom property bag."
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT",
                            "hasValuesFieldName": "hasDescription"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Documentation of the MLModel"
                        },
                        {
                          "type": [
                            "null",
                            "long"
                          ],
                          "name": "date",
                          "default": null,
                          "doc": "Date when the MLModel was developed"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "record",
                              "name": "VersionTag",
                              "namespace": "com.linkedin.pegasus2avro.common",
                              "fields": [
                                {
                                  "type": [
                                    "null",
                                    "string"
                                  ],
                                  "name": "versionTag",
                                  "default": null
                                }
                              ],
                              "doc": "A resource-defined string representing the resource state for the purpose of concurrency control"
                            }
                          ],
                          "name": "version",
                          "default": null,
                          "doc": "Version of the MLModel"
                        },
                        {
                          "Searchable": {
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "type",
                          "default": null,
                          "doc": "Type of Algorithm or MLModel such as whether it is a Naive Bayes classifier, Convolutional Neural Network, etc"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "map",
                              "values": [
                                "string",
                                "int",
                                "float",
                                "double",
                                "boolean"
                              ]
                            }
                          ],
                          "name": "hyperParameters",
                          "default": null,
                          "doc": "Hyper Parameters of the MLModel"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "mlFeatures",
                          "default": null,
                          "doc": "List of features used for MLModel training"
                        },
                        {
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "tags",
                          "default": [],
                          "doc": "Tags for the MLModel"
                        }
                      ],
                      "doc": "Properties associated with a ML Model"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "intendedUse"
                      },
                      "name": "IntendedUse",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "primaryUses",
                          "default": null,
                          "doc": "Primary Use cases for the MLModel."
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": {
                                "type": "enum",
                                "name": "IntendedUserType",
                                "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                                "symbols": [
                                  "ENTERPRISE",
                                  "HOBBY",
                                  "ENTERTAINMENT"
                                ]
                              }
                            }
                          ],
                          "name": "primaryUsers",
                          "default": null,
                          "doc": "Primary Intended Users - For example, was the MLModel developed for entertainment purposes, for hobbyists, or enterprise solutions?"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "outOfScopeUses",
                          "default": null,
                          "doc": "Highlight technology that the MLModel might easily be confused with, or related contexts that users could try to apply the MLModel to."
                        }
                      ],
                      "doc": "Intended Use for the ML Model"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelFactorPrompts"
                      },
                      "name": "MLModelFactorPrompts",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": {
                                "type": "record",
                                "name": "MLModelFactors",
                                "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                                "fields": [
                                  {
                                    "type": [
                                      "null",
                                      {
                                        "type": "array",
                                        "items": "string"
                                      }
                                    ],
                                    "name": "groups",
                                    "default": null,
                                    "doc": "Groups refers to distinct categories with similar characteristics that are present in the evaluation data instances.\nFor human-centric machine learning MLModels, groups are people who share one or multiple characteristics."
                                  },
                                  {
                                    "type": [
                                      "null",
                                      {
                                        "type": "array",
                                        "items": "string"
                                      }
                                    ],
                                    "name": "instrumentation",
                                    "default": null,
                                    "doc": "The performance of a MLModel can vary depending on what instruments were used to capture the input to the MLModel.\nFor example, a face detection model may perform differently depending on the camera\u2019s hardware and software,\nincluding lens, image stabilization, high dynamic range techniques, and background blurring for portrait mode."
                                  },
                                  {
                                    "type": [
                                      "null",
                                      {
                                        "type": "array",
                                        "items": "string"
                                      }
                                    ],
                                    "name": "environment",
                                    "default": null,
                                    "doc": "A further factor affecting MLModel performance is the environment in which it is deployed."
                                  }
                                ],
                                "doc": "Factors affecting the performance of the MLModel."
                              }
                            }
                          ],
                          "name": "relevantFactors",
                          "default": null,
                          "doc": "What are foreseeable salient factors for which MLModel performance may vary, and how were these determined?"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "com.linkedin.pegasus2avro.ml.metadata.MLModelFactors"
                            }
                          ],
                          "name": "evaluationFactors",
                          "default": null,
                          "doc": "Which factors are being reported, and why were these chosen?"
                        }
                      ],
                      "doc": "Prompts which affect the performance of the MLModel"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelMetrics"
                      },
                      "name": "Metrics",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "performanceMeasures",
                          "default": null,
                          "doc": "Measures of MLModel performance"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "decisionThreshold",
                          "default": null,
                          "doc": "Decision Thresholds used (if any)?"
                        }
                      ],
                      "doc": "Metrics to be featured for the MLModel."
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelEvaluationData"
                      },
                      "name": "EvaluationData",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "BaseData",
                              "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                              "fields": [
                                {
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                                  },
                                  "type": "string",
                                  "name": "dataset",
                                  "doc": "What dataset were used in the MLModel?"
                                },
                                {
                                  "type": [
                                    "null",
                                    "string"
                                  ],
                                  "name": "motivation",
                                  "default": null,
                                  "doc": "Why was this dataset chosen?"
                                },
                                {
                                  "type": [
                                    "null",
                                    {
                                      "type": "array",
                                      "items": "string"
                                    }
                                  ],
                                  "name": "preProcessing",
                                  "default": null,
                                  "doc": "How was the data preprocessed (e.g., tokenization of sentences, cropping of images, any filtering such as dropping images without faces)?"
                                }
                              ],
                              "doc": "BaseData record"
                            }
                          },
                          "name": "evaluationData",
                          "doc": "Details on the dataset(s) used for the quantitative analyses in the MLModel"
                        }
                      ],
                      "doc": "All referenced datasets would ideally point to any set of documents that provide visibility into the source and composition of the dataset."
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelTrainingData"
                      },
                      "name": "TrainingData",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": {
                            "type": "array",
                            "items": "com.linkedin.pegasus2avro.ml.metadata.BaseData"
                          },
                          "name": "trainingData",
                          "doc": "Details on the dataset(s) used for training the MLModel"
                        }
                      ],
                      "doc": "Ideally, the MLModel card would contain as much information about the training data as the evaluation data. However, there might be cases where it is not feasible to provide this level of detailed information about the training data. For example, the data may be proprietary, or require a non-disclosure agreement. In these cases, we advocate for basic details about the distributions over groups in the data, as well as any other details that could inform stakeholders on the kinds of biases the model may have encoded."
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelQuantitativeAnalyses"
                      },
                      "name": "QuantitativeAnalyses",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "unitaryResults",
                          "default": null,
                          "doc": "Link to a dashboard with results showing how the MLModel performed with respect to each factor"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "intersectionalResults",
                          "default": null,
                          "doc": "Link to a dashboard with results showing how the MLModel performed with respect to the intersection of evaluated factors?"
                        }
                      ],
                      "doc": "Quantitative analyses should be disaggregated, that is, broken down by the chosen factors. Quantitative analyses should provide the results of evaluating the MLModel according to the chosen metrics, providing confidence interval values when possible."
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelEthicalConsiderations"
                      },
                      "name": "EthicalConsiderations",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "data",
                          "default": null,
                          "doc": "Does the MLModel use any sensitive data (e.g., protected classes)?"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "humanLife",
                          "default": null,
                          "doc": " Is the MLModel intended to inform decisions about matters central to human life or flourishing \u2013 e.g., health or safety? Or could it be used in such a way?"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "mitigations",
                          "default": null,
                          "doc": "What risk mitigation strategies were used during MLModel development?"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "risksAndHarms",
                          "default": null,
                          "doc": "What risks may be present in MLModel usage? Try to identify the potential recipients, likelihood, and magnitude of harms. If these cannot be determined, note that they were considered but remain unknown."
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "useCases",
                          "default": null,
                          "doc": "Are there any known MLModel use cases that are especially fraught? This may connect directly to the intended use section"
                        }
                      ],
                      "doc": "This section is intended to demonstrate the ethical considerations that went into MLModel development, surfacing ethical challenges and solutions to stakeholders."
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlModelCaveatsAndRecommendations"
                      },
                      "name": "CaveatsAndRecommendations",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": [
                            "null",
                            {
                              "type": "record",
                              "name": "CaveatDetails",
                              "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                              "fields": [
                                {
                                  "type": [
                                    "null",
                                    "boolean"
                                  ],
                                  "name": "needsFurtherTesting",
                                  "default": null,
                                  "doc": "Did the results suggest any further testing?"
                                },
                                {
                                  "type": [
                                    "null",
                                    "string"
                                  ],
                                  "name": "caveatDescription",
                                  "default": null,
                                  "doc": "Caveat Description\nFor ex: Given gender classes are binary (male/not male), which we include as male/female. Further work needed to evaluate across a spectrum of genders."
                                },
                                {
                                  "type": [
                                    "null",
                                    {
                                      "type": "array",
                                      "items": "string"
                                    }
                                  ],
                                  "name": "groupsNotRepresented",
                                  "default": null,
                                  "doc": "Relevant groups that were not represented in the evaluation dataset?"
                                }
                              ],
                              "doc": "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?"
                            }
                          ],
                          "name": "caveats",
                          "default": null,
                          "doc": "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset?"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "recommendations",
                          "default": null,
                          "doc": "Recommendations on where this MLModel should be used."
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "idealDatasetCharacteristics",
                          "default": null,
                          "doc": "Ideal characteristics of an evaluation dataset for this MLModel"
                        }
                      ],
                      "doc": "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?"
                    },
                    "com.linkedin.pegasus2avro.common.InstitutionalMemory",
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "sourceCode"
                      },
                      "name": "SourceCode",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": {
                            "type": "array",
                            "items": {
                              "type": "record",
                              "name": "SourceCodeUrl",
                              "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                              "fields": [
                                {
                                  "type": {
                                    "type": "enum",
                                    "name": "SourceCodeUrlType",
                                    "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                                    "symbols": [
                                      "ML_MODEL_SOURCE_CODE",
                                      "TRAINING_PIPELINE_SOURCE_CODE",
                                      "EVALUATION_PIPELINE_SOURCE_CODE"
                                    ]
                                  },
                                  "name": "type",
                                  "doc": "Source Code Url Types"
                                },
                                {
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.url.Url",
                                    "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                                  },
                                  "type": "string",
                                  "name": "sourceCodeUrl",
                                  "doc": "Source Code Url"
                                }
                              ],
                              "doc": "Source Code Url Entity"
                            }
                          },
                          "name": "sourceCode",
                          "doc": "Source Code along with types"
                        }
                      ],
                      "doc": "Source Code"
                    },
                    "com.linkedin.pegasus2avro.common.Status",
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "cost"
                      },
                      "name": "Cost",
                      "namespace": "com.linkedin.pegasus2avro.common",
                      "fields": [
                        {
                          "type": {
                            "type": "enum",
                            "symbolDocs": {
                              "ORG_COST_TYPE": "Org Cost Type to which the Cost of this entity should be attributed to"
                            },
                            "name": "CostType",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "symbols": [
                              "ORG_COST_TYPE"
                            ],
                            "doc": "Type of Cost Code"
                          },
                          "name": "costType"
                        },
                        {
                          "type": {
                            "type": "record",
                            "name": "CostCost",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "fields": [
                              {
                                "type": [
                                  "null",
                                  "double"
                                ],
                                "name": "costId",
                                "default": null
                              },
                              {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "name": "costCode",
                                "default": null
                              },
                              {
                                "type": {
                                  "type": "enum",
                                  "name": "CostCostDiscriminator",
                                  "namespace": "com.linkedin.pegasus2avro.common",
                                  "symbols": [
                                    "costId",
                                    "costCode"
                                  ]
                                },
                                "name": "fieldDiscriminator",
                                "doc": "Contains the name of the field that has its value set."
                              }
                            ]
                          },
                          "name": "cost"
                        }
                      ]
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "deprecation"
                      },
                      "name": "Deprecation",
                      "namespace": "com.linkedin.pegasus2avro.common",
                      "fields": [
                        {
                          "Searchable": {
                            "fieldType": "BOOLEAN",
                            "weightsPerFieldValue": {
                              "true": 0.5
                            }
                          },
                          "type": "boolean",
                          "name": "deprecated",
                          "doc": "Whether the entity is deprecated."
                        },
                        {
                          "type": [
                            "null",
                            "long"
                          ],
                          "name": "decommissionTime",
                          "default": null,
                          "doc": "The time user plan to decommission this entity."
                        },
                        {
                          "type": "string",
                          "name": "note",
                          "doc": "Additional information about the entity deprecation plan, such as the wiki, doc, RB."
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.CorpuserUrn"
                          },
                          "type": "string",
                          "name": "actor",
                          "doc": "The corpuser URN which will be credited for modifying this deprecation content."
                        }
                      ],
                      "doc": "Deprecation status of an entity"
                    },
                    "com.linkedin.pegasus2avro.common.BrowsePaths"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the MLModel. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "MLModel Snapshot entity details."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "mlPrimaryKeyKey",
              "name": "mlPrimaryKey"
            },
            "name": "MLPrimaryKeySnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlPrimaryKeyKey"
                      },
                      "name": "MLPrimaryKeyKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "featureNamespace",
                          "doc": "Namespace for the primary key"
                        },
                        {
                          "Searchable": {
                            "boostScore": 8.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Name of the primary key"
                        }
                      ],
                      "doc": "Key for an MLPrimaryKey"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlPrimaryKeyProperties"
                      },
                      "name": "MLPrimaryKeyProperties",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Documentation of the MLPrimaryKey"
                        },
                        {
                          "type": [
                            "null",
                            {
                              "type": "enum",
                              "symbolDocs": {
                                "AUDIO": "Audio Data",
                                "BINARY": "Binary data is discrete data that can be in only one of two categories \u2014 either yes or no, 1 or 0, off or on, etc",
                                "BYTE": "Bytes data are binary-encoded values that can represent complex objects.",
                                "CONTINUOUS": "Continuous data are made of uncountable values, often the result of a measurement such as height, weight, age etc.",
                                "COUNT": "Count data is discrete whole number data \u2014 no negative numbers here.\nCount data often has many small values, such as zero and one.",
                                "IMAGE": "Image Data",
                                "INTERVAL": "Interval data has equal spaces between the numbers and does not represent a temporal pattern.\nExamples include percentages, temperatures, and income.",
                                "MAP": "Mapping Data Type ex: dict, map",
                                "NOMINAL": "Nominal data is made of discrete values with no numerical relationship between the different categories \u2014 mean and median are meaningless.\nAnimal species is one example. For example, pig is not higher than bird and lower than fish.",
                                "ORDINAL": "Ordinal data are discrete integers that can be ranked or sorted.\nFor example, the distance between first and second may not be the same as the distance between second and third.",
                                "SEQUENCE": "Sequence Data Type ex: list, tuple, range",
                                "SET": "Set Data Type ex: set, frozenset",
                                "TEXT": "Text Data",
                                "TIME": "Time data is a cyclical, repeating continuous form of data.\nThe relevant time features can be any period\u2014 daily, weekly, monthly, annual, etc.",
                                "UNKNOWN": "Unknown data are data that we don't know the type for.",
                                "USELESS": "Useless data is unique, discrete data with no potential relationship with the outcome variable.\nA useless feature has high cardinality. An example would be bank account numbers that were generated randomly.",
                                "VIDEO": "Video Data"
                              },
                              "name": "MLFeatureDataType",
                              "namespace": "com.linkedin.pegasus2avro.common",
                              "symbols": [
                                "USELESS",
                                "NOMINAL",
                                "ORDINAL",
                                "BINARY",
                                "COUNT",
                                "TIME",
                                "INTERVAL",
                                "IMAGE",
                                "VIDEO",
                                "AUDIO",
                                "TEXT",
                                "MAP",
                                "SEQUENCE",
                                "SET",
                                "CONTINUOUS",
                                "BYTE",
                                "UNKNOWN"
                              ],
                              "doc": "MLFeature Data Type"
                            }
                          ],
                          "name": "dataType",
                          "default": null,
                          "doc": "Data Type of the MLPrimaryKey"
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.VersionTag"
                          ],
                          "name": "version",
                          "default": null,
                          "doc": "Version of the MLPrimaryKey"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "dataset"
                              ],
                              "name": "DerivedFrom"
                            }
                          },
                          "type": {
                            "type": "array",
                            "items": "string"
                          },
                          "name": "sources",
                          "doc": "Source of the MLPrimaryKey"
                        }
                      ],
                      "doc": "Properties associated with a MLPrimaryKey"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.InstitutionalMemory",
                    "com.linkedin.pegasus2avro.common.Status",
                    "com.linkedin.pegasus2avro.common.Deprecation"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the MLPrimaryKey. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ]
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "mlFeatureKey",
              "name": "mlFeature"
            },
            "name": "MLFeatureSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.MLFeatureUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlFeatureKey"
                      },
                      "name": "MLFeatureKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "featureNamespace",
                          "doc": "Namespace for the feature"
                        },
                        {
                          "Searchable": {
                            "boostScore": 8.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Name of the feature"
                        }
                      ],
                      "doc": "Key for an MLFeature"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlFeatureProperties"
                      },
                      "name": "MLFeatureProperties",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Documentation of the MLFeature"
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.MLFeatureDataType"
                          ],
                          "name": "dataType",
                          "default": null,
                          "doc": "Data Type of the MLFeature"
                        },
                        {
                          "type": [
                            "null",
                            "com.linkedin.pegasus2avro.common.VersionTag"
                          ],
                          "name": "version",
                          "default": null,
                          "doc": "Version of the MLFeature"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "dataset"
                              ],
                              "name": "DerivedFrom"
                            }
                          },
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "sources",
                          "default": null,
                          "doc": "Source of the MLFeature"
                        }
                      ],
                      "doc": "Properties associated with a MLFeature"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.InstitutionalMemory",
                    "com.linkedin.pegasus2avro.common.Status",
                    "com.linkedin.pegasus2avro.common.Deprecation",
                    "com.linkedin.pegasus2avro.common.BrowsePaths"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the MLFeature. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ]
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "mlFeatureTableKey",
              "name": "mlFeatureTable"
            },
            "name": "MLFeatureTableSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlFeatureTableKey"
                      },
                      "name": "MLFeatureTableKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Relationship": {
                            "entityTypes": [
                              "dataPlatform"
                            ],
                            "name": "SourcePlatform"
                          },
                          "Searchable": {
                            "addToFilters": true,
                            "fieldType": "URN"
                          },
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                          },
                          "type": "string",
                          "name": "platform",
                          "doc": "Data platform urn associated with the feature table"
                        },
                        {
                          "Searchable": {
                            "boostScore": 8.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "Name of the feature table"
                        }
                      ],
                      "doc": "Key for an MLFeatureTable"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "mlFeatureTableProperties"
                      },
                      "name": "MLFeatureTableProperties",
                      "namespace": "com.linkedin.pegasus2avro.ml.metadata",
                      "fields": [
                        {
                          "type": {
                            "type": "map",
                            "values": "string"
                          },
                          "name": "customProperties",
                          "default": {},
                          "doc": "Custom property bag."
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Documentation of the MLFeatureTable"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "mlFeature"
                              ],
                              "name": "Contains"
                            }
                          },
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "mlFeatures",
                          "default": null,
                          "doc": "List of features contained in the feature table"
                        },
                        {
                          "Relationship": {
                            "/*": {
                              "entityTypes": [
                                "mlPrimaryKey"
                              ],
                              "name": "KeyedBy"
                            }
                          },
                          "type": [
                            "null",
                            {
                              "type": "array",
                              "items": "string"
                            }
                          ],
                          "name": "mlPrimaryKeys",
                          "default": null,
                          "doc": "List of primary keys in the feature table (if multiple, assumed to act as a composite key)"
                        }
                      ],
                      "doc": "Properties associated with a MLFeatureTable"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.InstitutionalMemory",
                    "com.linkedin.pegasus2avro.common.Status",
                    "com.linkedin.pegasus2avro.common.Deprecation",
                    "com.linkedin.pegasus2avro.common.BrowsePaths"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the MLFeatureTable. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ]
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "tagKey",
              "name": "tag"
            },
            "name": "TagSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.TagUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "tagKey"
                      },
                      "name": "TagKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "boostScore": 10.0,
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name",
                          "doc": "The unique tag name"
                        }
                      ],
                      "doc": "Key for a Tag"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "tagProperties"
                      },
                      "name": "TagProperties",
                      "namespace": "com.linkedin.pegasus2avro.tag",
                      "fields": [
                        {
                          "type": "string",
                          "name": "name",
                          "doc": "Name of the tag"
                        },
                        {
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "description",
                          "default": null,
                          "doc": "Documentation of the tag"
                        }
                      ],
                      "doc": "Properties associated with a Tag"
                    },
                    "com.linkedin.pegasus2avro.common.Status"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific dataset entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "glossaryTermKey",
              "name": "glossaryTerm"
            },
            "name": "GlossaryTermSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.GlossaryTermUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "glossaryTermKey"
                      },
                      "name": "GlossaryTermKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name"
                        }
                      ],
                      "doc": "Key for a GlossaryTerm"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "glossaryTermInfo"
                      },
                      "name": "GlossaryTermInfo",
                      "namespace": "com.linkedin.pegasus2avro.glossary",
                      "fields": [
                        {
                          "Searchable": {},
                          "type": "string",
                          "name": "definition",
                          "doc": "Definition of business term"
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.GlossaryNodeUrn"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "parentNode",
                          "default": null,
                          "doc": "Parent node of the glossary term"
                        },
                        {
                          "Searchable": {
                            "fieldType": "KEYWORD"
                          },
                          "type": "string",
                          "name": "termSource",
                          "doc": "Source of the Business Term (INTERNAL or EXTERNAL) with default value as INTERNAL"
                        },
                        {
                          "Searchable": {
                            "fieldType": "KEYWORD"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "sourceRef",
                          "default": null,
                          "doc": "External Reference to the business-term"
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.url.Url",
                            "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "sourceUrl",
                          "default": null,
                          "doc": "The abstracted URL such as https://spec.edmcouncil.org/fibo/ontology/FBC/FinancialInstruments/FinancialInstruments/CashInstrument."
                        },
                        {
                          "type": {
                            "type": "map",
                            "values": "string"
                          },
                          "name": "customProperties",
                          "default": {},
                          "doc": "A key-value map to capture any other non-standardized properties for the glossary term"
                        }
                      ],
                      "doc": "Properties associated with a GlossaryTerm"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.Status"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the GlossaryTerm. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific GlossaryTerm entity."
          },
          {
            "type": "record",
            "Entity": {
              "keyAspect": "glossaryNodeKey",
              "name": "glossaryNode"
            },
            "name": "GlossaryNodeSnapshot",
            "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
            "fields": [
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.GlossaryNodeUrn"
                },
                "type": "string",
                "name": "urn",
                "doc": "URN for the entity the metadata snapshot is associated with."
              },
              {
                "type": {
                  "type": "array",
                  "items": [
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "glossaryNodeKey"
                      },
                      "name": "GlossaryNodeKey",
                      "namespace": "com.linkedin.pegasus2avro.metadata.key",
                      "fields": [
                        {
                          "Searchable": {
                            "enableAutocomplete": true,
                            "fieldType": "TEXT_PARTIAL"
                          },
                          "type": "string",
                          "name": "name"
                        }
                      ],
                      "doc": "Key for a GlossaryNode"
                    },
                    {
                      "type": "record",
                      "Aspect": {
                        "name": "glossaryNodeInfo"
                      },
                      "name": "GlossaryNodeInfo",
                      "namespace": "com.linkedin.pegasus2avro.glossary",
                      "fields": [
                        {
                          "Searchable": {},
                          "type": "string",
                          "name": "definition",
                          "doc": "Definition of business node"
                        },
                        {
                          "java": {
                            "class": "com.linkedin.pegasus2avro.common.urn.GlossaryNodeUrn"
                          },
                          "type": [
                            "null",
                            "string"
                          ],
                          "name": "parentNode",
                          "default": null,
                          "doc": "Parent node of the glossary term"
                        }
                      ],
                      "doc": "Properties associated with a GlossaryNode"
                    },
                    "com.linkedin.pegasus2avro.common.Ownership",
                    "com.linkedin.pegasus2avro.common.Status"
                  ]
                },
                "name": "aspects",
                "doc": "The list of metadata aspects associated with the GlossaryNode. Depending on the use case, this can either be all, or a selection, of supported aspects."
              }
            ],
            "doc": "A metadata snapshot for a specific GlossaryNode entity."
          }
        ],
        "name": "proposedSnapshot",
        "doc": "Snapshot of the proposed metadata change. Include only the aspects affected by the change in the snapshot."
      },
      {
        "type": [
          "null"
        ],
        "name": "proposedDelta",
        "default": null,
        "doc": "Delta of the proposed metadata partial update."
      }
    ],
    "doc": "Kafka event for proposing a metadata change for an entity. A corresponding MetadataAuditEvent is emitted when the change is accepted and committed, otherwise a FailedMetadataChangeEvent will be emitted instead."
  },
  {
    "type": "record",
    "name": "MetadataAuditEvent",
    "namespace": "com.linkedin.pegasus2avro.mxe",
    "fields": [
      {
        "type": [
          "null",
          "com.linkedin.events.KafkaAuditHeader"
        ],
        "name": "auditHeader",
        "default": null,
        "doc": "Kafka audit header. See go/kafkaauditheader for more info."
      },
      {
        "type": [
          "null",
          "com.linkedin.pegasus2avro.metadata.snapshot.ChartSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.CorpUserSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DashboardSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DataFlowSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DataJobSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DatasetSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DataProcessSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DataPlatformSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.MLModelSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.MLPrimaryKeySnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.MLFeatureSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.MLFeatureTableSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.TagSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.GlossaryTermSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.GlossaryNodeSnapshot"
        ],
        "name": "oldSnapshot",
        "default": null,
        "doc": "Snapshot of the metadata before the update. Set to null for newly created metadata. Only the metadata aspects affected by the update are included in the snapshot."
      },
      {
        "type": [
          "com.linkedin.pegasus2avro.metadata.snapshot.ChartSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.CorpUserSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DashboardSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DataFlowSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DataJobSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DatasetSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DataProcessSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.DataPlatformSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.MLModelSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.MLPrimaryKeySnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.MLFeatureSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.MLFeatureTableSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.TagSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.GlossaryTermSnapshot",
          "com.linkedin.pegasus2avro.metadata.snapshot.GlossaryNodeSnapshot"
        ],
        "name": "newSnapshot",
        "doc": "Snapshot of the metadata after the update. Only the metadata aspects affected by the update are included in the snapshot."
      }
    ],
    "doc": "Kafka event for capturing update made to an entity's metadata."
  },
  {
    "type": "record",
    "name": "UsageAggregation",
    "namespace": "com.linkedin.pegasus2avro.usage",
    "fields": [
      {
        "type": "long",
        "name": "bucket",
        "doc": " Bucket start time in milliseconds "
      },
      {
        "type": {
          "type": "enum",
          "name": "WindowDuration",
          "namespace": "com.linkedin.pegasus2avro.common",
          "symbols": [
            "YEAR",
            "MONTH",
            "WEEK",
            "DAY",
            "HOUR"
          ],
          "doc": "Enum to define the length of a bucket when doing aggregations"
        },
        "name": "duration",
        "doc": " Bucket duration "
      },
      {
        "java": {
          "class": "com.linkedin.pegasus2avro.common.urn.Urn"
        },
        "type": "string",
        "name": "resource",
        "doc": " Resource associated with these usage stats "
      },
      {
        "type": {
          "type": "record",
          "name": "UsageAggregationMetrics",
          "namespace": "com.linkedin.pegasus2avro.usage",
          "fields": [
            {
              "type": [
                "null",
                "int"
              ],
              "name": "uniqueUserCount",
              "default": null,
              "doc": " Unique user count "
            },
            {
              "type": [
                "null",
                {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "UserUsageCounts",
                    "namespace": "com.linkedin.pegasus2avro.usage",
                    "fields": [
                      {
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                        },
                        "type": [
                          "null",
                          "string"
                        ],
                        "name": "user",
                        "default": null
                      },
                      {
                        "type": "int",
                        "name": "count"
                      },
                      {
                        "type": [
                          "null",
                          "string"
                        ],
                        "name": "userEmail",
                        "default": null,
                        "doc": " If user_email is set, we attempt to resolve the user's urn upon ingest "
                      }
                    ],
                    "doc": " Records a single user's usage counts for a given resource "
                  }
                }
              ],
              "name": "users",
              "default": null,
              "doc": " Users within this bucket, with frequency counts "
            },
            {
              "type": [
                "null",
                "int"
              ],
              "name": "totalSqlQueries",
              "default": null,
              "doc": " Total SQL query count "
            },
            {
              "type": [
                "null",
                {
                  "type": "array",
                  "items": "string"
                }
              ],
              "name": "topSqlQueries",
              "default": null,
              "doc": " Frequent SQL queries; mostly makes sense for datasets in SQL databases "
            },
            {
              "type": [
                "null",
                {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "FieldUsageCounts",
                    "namespace": "com.linkedin.pegasus2avro.usage",
                    "fields": [
                      {
                        "type": "string",
                        "name": "fieldName"
                      },
                      {
                        "type": "int",
                        "name": "count"
                      }
                    ],
                    "doc": " Records field-level usage counts for a given resource "
                  }
                }
              ],
              "name": "fields",
              "default": null,
              "doc": " Field-level usage stats "
            }
          ],
          "doc": "Metrics for usage data for a given resource and bucket. Not all fields\nmake sense for all buckets, so every field is optional."
        },
        "name": "metrics",
        "doc": " Metrics associated with this bucket "
      }
    ],
    "doc": "Usage data for a given resource, rolled up into a bucket."
  }
]